{"version":3,"names":["NativeType","ChipClass","root","inner","hasRight","hasLeft","govChipCss","GovChipStyle0","GovChip","constructor","hostRef","ButtonSizes","_M","ButtonVariants","PRIMARY","this","h","govHost","host","chipId","createID","validateVariant","newValue","validateProp","validateSize","componentWillLoad","variant","size","render","Tag","href","A","tag","nativeType","BUTTON","undefined","iconLeft","prepareIconFormat","iconRight","Host","key","class","classes","hasSlot","disabled","type","inverse","hoverable","target","wcagLabel","ref","el","triggerRef","onClick","onClickHandler","bind","wcagControls","toBoolAttr","wcagSelected","tabindex","focusable","id","identifier","name","e","stopPropagation","govClick","emit","getTriggerRef","getTriggerIdentifier","setFocus","focus"],"sources":["../../packages/core/src/components/gov-chip/constants.ts","../../packages/core/src/components/gov-chip/gov-chip.scss?tag=gov-chip","../../packages/core/src/components/gov-chip/gov-chip.tsx"],"sourcesContent":["import { ValueOf } from '../../types/interfaces'\n\nexport enum NativeType {\n\tA = 'a',\n\tSPAN = 'span',\n\tBUTTON = 'button',\n}\n\nexport type NativeTypesType = `${ValueOf<typeof NativeType>}`\n\nexport const ChipClass = {\n\troot: 'gov-chip',\n\tinner: 'gov-chip__inner',\n\thasRight: 'gov-chip--has-right',\n\thasLeft: 'gov-chip--has-left',\n}\n","/*\n *   Chip\n */\n\n// Shared definitions - button & chip\n@import \"../gov-button/button/gov-button-core\";\n\n.gov-chip {\n\t@extend %button-core;\n\tdisplay: inline-flex;\n\ta .gov-icon {\n\t\tmargin: 0;\n\t}\n\t.element {\n\t\tpadding: rem-calc(4 10);\n\t\tfont-family: $font-family-primary;\n\t\tfont-weight: 400;\n\t\tletter-spacing: initial;\n\t}\n\t.gov-button {\n\t\t.element {\n\t\t\tborder: none;\n\t\t}\n\t}\n\t&--has-right > .element {\n\t\tpadding-top: 0 !important;\n\t\tpadding-right: 0 !important;\n\t\tpadding-bottom: 0 !important;\n\t}\n\n\t&--has-left > .element {\n\t\tpadding-top: 0 !important;\n\t\tpadding-bottom: 0 !important;\n\t\tpadding-left: 0 !important;\n\t}\n\n\t// VARIANTS\n\t@each $size, $definitions in $button-sizes {\n\t\t$radius: calc(#{get(\"min-height\", $definitions)} * 0.5);\n\t\t&[size=\"#{$size}\"] {\n\t\t\t.element {\n\t\t\t\tborder-radius: $radius;\n\t\t\t}\n\n\t\t\t// HOVERS\n\t\t\t&[hoverable] .element {\n\t\t\t\t@include focus-outline($radius, $outline-offset);\n\t\t\t}\n\t\t}\n\t}\n\t@each $variant, $types in $chip-inverse-variants {\n\t\t&[variant=\"#{$variant}\"] {\n\t\t\t@include parameter(\"inverse\") {\n\t\t\t\t.element,\n\t\t\t\t.element .element {\n\t\t\t\t\tborder-width: rem-calc(1);\n\t\t\t\t\tborder-color: deep-map-get($chip-inverse-variants, $variant, \"border-color\");\n\t\t\t\t\tbackground-color: deep-map-get($chip-inverse-variants, $variant, \"bg\");\n\t\t\t\t\tcolor: deep-map-get($chip-inverse-variants, $variant, \"color\");\n\t\t\t\t\t@include hover() {\n\t\t\t\t\t\tborder-color: deep-map-get($chip-inverse-variants, $variant, \"border-color-hover\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Component, Element, Event, EventEmitter, h, Host, Method, Prop, Watch } from \"@stencil/core\"\nimport { GovHost } from \"../../helpers/Dom/template.types\"\nimport { validateProp } from \"../../helpers/Validate/props\"\nimport { govHost, toBoolAttr } from \"../../helpers/Dom/template\"\nimport { ChipClass, NativeType, NativeTypesType } from \"./constants\"\nimport { ButtonSizes, ButtonSizesType, ButtonVariants, ButtonVariantType } from \"../gov-button/button/constants\"\nimport { createID } from \"../../utils/string.utils\"\nimport {prepareIconFormat} from \"../gov-icon/helpers\";\n\n@Component({\n\ttag: \"gov-chip\",\n\tstyleUrl: \"gov-chip.scss\",\n})\nexport class GovChip {\n\tprivate triggerRef?: HTMLButtonElement | HTMLLinkElement | HTMLSpanElement\n\tprivate h: GovHost\n\tprivate readonly chipId: string\n\n\tconstructor() {\n\t\tthis.h = govHost(this.host)\n\t\tthis.chipId = createID('GovChip')\n\t}\n\n\t@Element() host: HTMLGovChipElement\n\n\t/**\n\t * Determine if component should have inverse colors to be used on dark background\n\t */\n\t@Prop() readonly inverse: boolean = false\n\t/**\n\t * Makes the chip component disabled.\n\t * This prevents users from being able to interact with the button, and conveys its inactive state to assistive technologies.\n\t */\n\t@Prop() readonly disabled: boolean = false\n\t/**\n\t * Same as original parameter\n\t * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href\n\t */\n\t@Prop() readonly href: string\n\t/**\n\t * Same as original parameter\n\t * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target\n\t */\n\t@Prop() readonly target: string\n\t/**\n\t * Definition of the button icon on the left. The icon must be defined in the form \"type/name\".\n\t */\n\t@Prop({attribute: \"icon-left\"}) readonly iconLeft?: string\n\t/**\n\t * Definition of the button icon on the left. The icon must be defined in the form \"type/name\".\n\t */\n\t@Prop({attribute: \"icon-right\"}) readonly iconRight?: string\n\t/**\n\t * Chipâ€™s size.\n\t */\n\t@Prop() readonly size: ButtonSizesType = ButtonSizes._M\n\t/**\n\t * Used to change the HTML tag in the chip\n\t */\n\t@Prop() readonly tag: NativeTypesType = \"span\"\n\t/**\n\t * Style variation of the chip.\n\t */\n\t@Prop() readonly variant: ButtonVariantType = ButtonVariants.PRIMARY\n\t/**\n\t * Same as original parameter\n\t * @link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/focusable\n\t */\n\t@Prop() readonly focusable: boolean = true\n\t/**\n\t * Custom chip identifier. Otherwise, it will be generated\n\t */\n\t@Prop() readonly identifier: string\n\t/**\n\t * Adds accessible label for the button that is only shown for screen readers.\n\t * Typically, this label text replaces the visible text on the button for users who use assistive technology.\n\t */\n\t@Prop({ attribute: \"wcag-label\" }) readonly wcagLabel: string\n\t/**\n\t * Use this property to add an aria-controls attribute to the button. Use the attribute to point to the unique id of the content that the button manages\n\t */\n\t@Prop({ attribute: \"wcag-controls\" }) readonly wcagControls: string\n\t/**\n\t * Same as original parameter\n\t * @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-selected\n\t */\n\t@Prop({ attribute: \"wcag-selected\" }) readonly wcagSelected: boolean\n\t/**\n\t * Emitted when the button click.\n\t */\n\t@Event({ eventName: \"gov-click\" }) govClick: EventEmitter<PointerEvent>\n\n\t@Watch(\"variant\")\n\tvalidateVariant(newValue: string): void {\n\t\tvalidateProp(ButtonVariants, newValue, ChipClass.root)\n\t}\n\n\t@Watch(\"size\")\n\tvalidateSize(newValue: string): void {\n\t\tvalidateProp(ButtonSizes, newValue, ChipClass.root)\n\t}\n\n\tcomponentWillLoad(): void {\n\t\tthis.validateVariant(this.variant)\n\t\tthis.validateSize(this.size)\n\t}\n\n\trender() {\n\t\tconst Tag = this.href ? NativeType.A : this.tag\n\t\tconst nativeType = Tag == NativeType.BUTTON ? NativeType.BUTTON : undefined\n\n\t\tconst iconLeft = prepareIconFormat(this.iconLeft)\n\t\tconst iconRight = prepareIconFormat(this.iconRight)\n\n\t\treturn (\n\t\t\t<Host\n\t\t\t\tclass={this.h.classes([\n\t\t\t\t\tChipClass.root,\n\t\t\t\t\tthis.h.hasSlot(\"right\") ? ChipClass.hasRight : undefined,\n\t\t\t\t\tthis.h.hasSlot(\"left\") ? ChipClass.hasLeft : undefined,\n\t\t\t\t])}\n\t\t\t\tdisabled={this.disabled}\n\t\t\t\thref={this.href}\n\t\t\t\tvariant={this.variant}\n\t\t\t\ttype={this.inverse ? undefined : \"solid\"}\n\t\t\t\tsize={this.size}\n\t\t\t\tinverse={this.inverse}\n\t\t\t\thoverable={Tag == NativeType.A || Tag == NativeType.BUTTON}\n\t\t\t>\n\t\t\t\t<Tag\n\t\t\t\t\tclass=\"element\"\n\t\t\t\t\thref={this.href}\n\t\t\t\t\ttarget={this.target}\n\t\t\t\t\taria-label={this.wcagLabel}\n\t\t\t\t\tref={el => (this.triggerRef = el as HTMLLinkElement | HTMLButtonElement | HTMLSpanElement)}\n\t\t\t\t\tonClick={this.onClickHandler.bind(this)}\n\t\t\t\t\taria-controls={this.wcagControls}\n\t\t\t\t\taria-selected={toBoolAttr(this.wcagSelected)}\n\t\t\t\t\ttabindex={this.focusable ? \"0\" : \"-1\"}\n\t\t\t\t\tid={this.identifier || this.chipId}\n\t\t\t\t\ttype={nativeType}>\n\t\t\t\t\t{this.h.hasSlot(\"left\") && <slot name=\"left\"></slot>}\n\t\t\t\t\t{this.h.hasSlot(\"left-icon\") && <slot name=\"left-icon\"></slot>}\n\t\t\t\t\t{iconLeft && \t<gov-icon type={iconLeft.type} name={iconLeft.name}></gov-icon>}\n\t\t\t\t\t<slot />\n\t\t\t\t\t{this.h.hasSlot(\"right-icon\") && <slot name=\"right-icon\"></slot>}\n\t\t\t\t\t{this.h.hasSlot(\"right\") && <slot name=\"right\"></slot>}\n\t\t\t\t\t{iconRight && \t<gov-icon type={iconRight.type} name={iconRight.name}></gov-icon>}\n\t\t\t\t</Tag>\n\t\t\t</Host>\n\t\t)\n\t}\n\n\tprivate onClickHandler(e: PointerEvent): void {\n\t\te.stopPropagation()\n\t\tif (this.disabled === false && this.tag === NativeType.BUTTON) {\n\t\t\tthis.govClick.emit(e)\n\t\t}\n\t}\n\n\t/**\n\t * Returns a clickable element instance\n\t */\n\t@Method()\n\tasync getTriggerRef() {\n\t\treturn this.triggerRef\n\t}\n\n\t/**\n\t * Returns a unique tab trigger identifier\n\t */\n\t@Method()\n\tasync getTriggerIdentifier(): Promise<string> {\n\t\treturn this.identifier || this.chipId\n\t}\n\n\t/**\n\t * Focus button element\n\t */\n\t@Method()\n\tasync setFocus(): Promise<void> {\n\t\tthis.triggerRef.focus()\n\t}\n}\n"],"mappings":"6VAEA,IAAYA,GAAZ,SAAYA,GACXA,EAAA,SACAA,EAAA,eACAA,EAAA,kBACA,EAJD,CAAYA,MAAU,KAQf,MAAMC,EAAY,CACxBC,KAAM,WACNC,MAAO,kBACPC,SAAU,sBACVC,QAAS,sBCdV,MAAMC,EAAa,ww4EACnB,MAAAC,EAAeD,E,MCYFE,EAAO,MAKnB,WAAAC,CAAAC,G,2DAUoC,M,cAKC,M,qGAsBIC,EAAYC,G,SAIb,O,aAIMC,EAAeC,Q,eAKvB,K,2GAjDrCC,KAAKC,EAAIC,EAAQF,KAAKG,MACtBH,KAAKI,OAASC,EAAS,U,CAyExB,eAAAC,CAAgBC,GACfC,EAAaV,EAAgBS,EAAUrB,EAAUC,K,CAIlD,YAAAsB,CAAaF,GACZC,EAAaZ,EAAaW,EAAUrB,EAAUC,K,CAG/C,iBAAAuB,GACCV,KAAKM,gBAAgBN,KAAKW,SAC1BX,KAAKS,aAAaT,KAAKY,K,CAGxB,MAAAC,GACC,MAAMC,EAAMd,KAAKe,KAAO9B,EAAW+B,EAAIhB,KAAKiB,IAC5C,MAAMC,EAAaJ,GAAO7B,EAAWkC,OAASlC,EAAWkC,OAASC,UAElE,MAAMC,EAAWC,EAAkBtB,KAAKqB,UACxC,MAAME,EAAYD,EAAkBtB,KAAKuB,WAEzC,OACCtB,EAACuB,EAAI,CAAAC,IAAA,2CACJC,MAAO1B,KAAKC,EAAE0B,QAAQ,CACrBzC,EAAUC,KACVa,KAAKC,EAAE2B,QAAQ,SAAW1C,EAAUG,SAAW+B,UAC/CpB,KAAKC,EAAE2B,QAAQ,QAAU1C,EAAUI,QAAU8B,YAE9CS,SAAU7B,KAAK6B,SACfd,KAAMf,KAAKe,KACXJ,QAASX,KAAKW,QACdmB,KAAM9B,KAAK+B,QAAUX,UAAY,QACjCR,KAAMZ,KAAKY,KACXmB,QAAS/B,KAAK+B,QACdC,UAAWlB,GAAO7B,EAAW+B,GAAKF,GAAO7B,EAAWkC,QAEpDlB,EAACa,EAAG,CAAAW,IAAA,2CACHC,MAAM,UACNX,KAAMf,KAAKe,KACXkB,OAAQjC,KAAKiC,OAAM,aACPjC,KAAKkC,UACjBC,IAAKC,GAAOpC,KAAKqC,WAAaD,EAC9BE,QAAStC,KAAKuC,eAAeC,KAAKxC,MAAK,gBACxBA,KAAKyC,aAAY,gBACjBC,EAAW1C,KAAK2C,cAC/BC,SAAU5C,KAAK6C,UAAY,IAAM,KACjCC,GAAI9C,KAAK+C,YAAc/C,KAAKI,OAC5B0B,KAAMZ,GACLlB,KAAKC,EAAE2B,QAAQ,SAAW3B,EAAA,QAAM+C,KAAK,SACrChD,KAAKC,EAAE2B,QAAQ,cAAgB3B,EAAA,QAAM+C,KAAK,cAC1C3B,GAAapB,EAAA,YAAU6B,KAAMT,EAASS,KAAMkB,KAAM3B,EAAS2B,OAC5D/C,EAAA,QAAAwB,IAAA,6CACCzB,KAAKC,EAAE2B,QAAQ,eAAiB3B,EAAA,QAAM+C,KAAK,eAC3ChD,KAAKC,EAAE2B,QAAQ,UAAY3B,EAAA,QAAM+C,KAAK,UACtCzB,GAActB,EAAA,YAAU6B,KAAMP,EAAUO,KAAMkB,KAAMzB,EAAUyB,Q,CAM3D,cAAAT,CAAeU,GACtBA,EAAEC,kBACF,GAAIlD,KAAK6B,WAAa,OAAS7B,KAAKiB,MAAQhC,EAAWkC,OAAQ,CAC9DnB,KAAKmD,SAASC,KAAKH,E,EAQrB,mBAAMI,GACL,OAAOrD,KAAKqC,U,CAOb,0BAAMiB,GACL,OAAOtD,KAAK+C,YAAc/C,KAAKI,M,CAOhC,cAAMmD,GACLvD,KAAKqC,WAAWmB,O"}